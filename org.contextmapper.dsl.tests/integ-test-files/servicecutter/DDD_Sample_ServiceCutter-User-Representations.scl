
UseCase ViewTracking {
	reads "Cargo.trackingId", "HandlingEvent.handlingType", "Location.name", "HandlingEvent.completionTime", "Delivery.transportStatus", 
	"Delivery.misdirected", "VoyageNumber.number"
}

UseCase ViewCargos {
	reads "Cargo.trackingId", "Location.name", "RouteSpecification.arrivalDeadline", "Delivery.routingStatus", "Itinerary.itineraryNumber"
}

UseCase BookCargo {
	reads "UnLocode.unLocode"
	writes "Cargo.trackingId", "Location.name", "RouteSpecification.arrivalDeadline"
}

UseCase ChangeCargoDestination {
	reads "Cargo.trackingId", "Location.name"
	writes "Location.name"
}

UseCase RouteCargo {
	reads "Cargo.trackingId", "Location.name", "RouteSpecification.arrivalDeadline", "UnLocode.unLocode", "VoyageNumber.number", 
	"CarrierMovement.departureTime", "CarrierMovement.arrivalTime"
	writes "Itinerary.itineraryNumber", "Location.name", "Leg.loadTime", "Leg.unloadTime"
}

UseCase CreateLocation {
	writes "UnLocode.unLocode", "Location.name"
}

UseCase CreateVoyage {
	writes "VoyageNumber.number"
}

UseCase AddCarrierMovement {
	reads "VoyageNumber.number"
	writes "Location.name", "CarrierMovement.departureTime", "CarrierMovement.arrivalTime"
}

UseCase handleCargoEvent {
	reads "VoyageNumber.number", "Cargo.trackingId"
	writes "HandlingEvent.handlingType", "HandlingEvent.completionTime", "HandlingEvent.registrationTime", "Location.name", "Delivery.transportStatus", "Delivery.misdirected", 
	"Delivery.isUnloadedAtDestination", "Delivery.routingStatus"
}

Compatibilities {
	ContentVolatility {
		characteristic Often
		"HandlingEvent.handlingType", "HandlingEvent.completionTime", "HandlingEvent.registrationTime", "Location.name", "Delivery.transportStatus"
	}
	ContentVolatility {
		characteristic Rarely
		"UnLocode.unLocode", "Location.name"
	}
	StructuralVolatility {
		characteristic Rarely
		"UnLocode.unLocode", "Location.name"
	}
}

/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate CargoItineraryLegDeliveryRouteSpecification {
	"Cargo.trackingId" , "Delivery.misdirected" , "Delivery.eta" , "Delivery.isUnloadedAtDestination" , "Delivery.calculatedAt" , "HandlingActivity.handlingEventType" , "Itinerary.itineraryNumber" , "Leg.loadTime" , "Leg.unloadTime" , "RouteSpecification.arrivalDeadline"
}

/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate Handling {
	"HandlingEvent.handlingType" , "HandlingEvent.completionTime" , "HandlingEvent.registrationTime"
}

/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate Voyage {
	"CarrierMovement.departureTime" , "CarrierMovement.arrivalTime" , "VoyageNumber.number"
}

/* This aggregate was generated by your CML model. You do not have to change it. */
Aggregate Location {
	"Location.name" , "UnLocode.unLocode"
}

/* This predefined service is based on your 'CargoBookingContext' BoundedContext. You do not have to change it. */
PredefinedService CargoBookingContext {
	"Cargo.trackingId" , "Delivery.misdirected" , "Delivery.eta" , "Delivery.isUnloadedAtDestination" , "Delivery.calculatedAt" , "HandlingActivity.handlingEventType" , "Itinerary.itineraryNumber" , "Leg.loadTime" , "Leg.unloadTime" , "RouteSpecification.arrivalDeadline" , "HandlingEvent.handlingType" , "HandlingEvent.completionTime" , "HandlingEvent.registrationTime"
}

/* This predefined service is based on your 'VoyagePlanningContext' BoundedContext. You do not have to change it. */
PredefinedService VoyagePlanningContext {
	"CarrierMovement.departureTime" , "CarrierMovement.arrivalTime" , "VoyageNumber.number"
}

/* This predefined service is based on your 'LocationContext' BoundedContext. You do not have to change it. */
PredefinedService LocationContext {
	"Location.name" , "UnLocode.unLocode"
}

SharedOwnerGroup cargoPlaner {
	"Cargo.trackingId",
	"Location.name",
	"RouteSpecification.arrivalDeadline",
	"Itinerary.itineraryNumber",
	"Leg.loadTime",
	"Leg.unloadTime",
	"Delivery.routingStatus"
}

SharedOwnerGroup cargoTracker {
	"HandlingEvent.handlingType",
	"HandlingEvent.completionTime",
	"HandlingEvent.registrationTime",
	"Location.name",
	"Delivery.transportStatus",
	"Delivery.misdirected",
	"Delivery.isUnloadedAtDestination"
}

SharedOwnerGroup voyageManager {
	"VoyageNumber.number",
	"Location.name",
	"CarrierMovement.departureTime",
	"CarrierMovement.arrivalTime"
}

SharedOwnerGroup admin {
	"Location.name",
	"UnLocode.unLocode"
}


