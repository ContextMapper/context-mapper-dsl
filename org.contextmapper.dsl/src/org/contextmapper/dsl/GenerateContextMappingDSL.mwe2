module org.contextmapper.dsl.GenerateContextMappingDSL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.contextmapper.dsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.contextmapper.dsl.TacticDSL"
			fileExtensions = "bcdesign"

			serializer = {
				generateStub = false
			}
			validator = {
				composedCheck = "org.contextmapper.tactic.dsl.validation.TacticDslValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
				generateXtendStub = false
				generateStub = false
			}
			junitSupport = {
				junitVersion = "5"
				generateStub = false
			}
		}
		language = StandardLanguage {
			name = "org.contextmapper.dsl.ContextMappingDSL"
			fileExtensions = "cml"

			referencedResource = "platform:/resource/org.contextmapper.dsl/src/org/contextmapper/dsl/TacticDSL.xtext"

			serializer = {
				generateStub = false
			}
			validator = {
				composedCheck = "org.contextmapper.dsl.validation.BoundedContextRelationshipSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.ContextMapSemanticsValidator"

				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true

				generateXtendStub = false
				generateStub = false
			}
			junitSupport = {
				junitVersion = "5"
				generateStub = false
			}
		}
	}
}
