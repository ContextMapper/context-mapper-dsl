/*
 * Copyright 2018 The Context Mapper Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
module org.contextmapper.dsl.GenerateContextMappingDSL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.contextmapper.dsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
				genericIde = {
					enabled = true
				}
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.contextmapper.dsl.TacticDSL"
			fileExtensions = "bcdesign"

			fragment = exporting.SimpleNamesFragment2 {}
			fragment = builder.BuilderIntegrationFragment2 {}
			fragment = ui.labeling.LabelProviderFragment2 {}
			fragment = ui.outline.QuickOutlineFragment2 {}
			fragment = ui.outline.OutlineTreeProviderFragment2 {}
			fragment = ui.quickfix.QuickfixProviderFragment2 {}
			fragment = ui.contentAssist.ContentAssistFragment2 {}
			fragment = ui.refactoring.RefactorElementNameFragment2 {}
			fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
			fragment = ui.compare.CompareFragment2 {}

			serializer = {
				generateStub = false
			}
			validator = {
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
				generateStub = false
			}
			generator = {
				generateXtendStub = false
				generateStub = false
			}
			formatter = {
				generateStub = true
			}
		}
		language = StandardLanguage {
			name = "org.contextmapper.dsl.ServiceCutterConfigurationDSL"
			fileExtensions = "scl"

			referencedResource = "platform:/resource/org.contextmapper.dsl/src/org/contextmapper/dsl/TacticDSL.xtext"

			serializer = {
				generateStub = false
			}
			validator = {
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
				generateXtendStub = false
				generateStub = false
			}
			junitSupport = {
				junitVersion = "5"
				generateStub = false
			}
			generator = {
				generateXtendStub = false
				generateStub = false
			}
			formatter = {
				generateStub = true
			}
		}
		language = StandardLanguage {
			name = "org.contextmapper.dsl.ContextMappingDSL"
			fileExtensions = "cml"

			referencedResource = "platform:/resource/org.contextmapper.dsl/src/org/contextmapper/dsl/ServiceCutterConfigurationDSL.xtext"
			referencedResource = "platform:/resource/org.contextmapper.dsl/src/org/contextmapper/dsl/TacticDSL.xtext"

			fragment = exporting.SimpleNamesFragment2 {}
			fragment = builder.BuilderIntegrationFragment2 {}
			fragment = ui.labeling.LabelProviderFragment2 {}
			fragment = ui.outline.QuickOutlineFragment2 {}
			fragment = ui.outline.OutlineTreeProviderFragment2 {}
			fragment = ui.quickfix.QuickfixProviderFragment2 {}
			fragment = ui.contentAssist.ContentAssistFragment2 {}
			fragment = ui.refactoring.RefactorElementNameFragment2 {}
			fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
			fragment = ui.compare.CompareFragment2 {}

			serializer = {
				generateStub = false
			}
			validator = {
				composedCheck = "org.contextmapper.dsl.validation.BoundedContextSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.BoundedContextRelationshipSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.ContextMapSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.AggregateSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.TeamSemanticsValidator"
				composedCheck = "org.contextmapper.dsl.validation.UniquenessValidator"
				composedCheck = "org.eclipse.xtext.validation.ImportUriValidator"
				composedCheck = "org.contextmapper.dsl.validation.UserRequirementsValidator"
				composedCheck = "org.contextmapper.dsl.validation.TacticDDDModuleValidator"
				composedCheck = "org.contextmapper.dsl.validation.DomainObjectValidator"

				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true

				generateXtendStub = false
				generateStub = false
			}
			junitSupport = {
				junitVersion = "5"
				generateStub = false
			}
			generator = {
				generateXtendStub = false
				generateStub = false
			}
			formatter = {
				generateStub = true
			}
		}
	}
}
