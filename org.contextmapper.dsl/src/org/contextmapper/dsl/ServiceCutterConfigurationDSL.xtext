/*
 * Copyright 2018 The Context Mapper Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

grammar org.contextmapper.servicecutter.dsl.ServiceCutterConfigurationDSL with org.eclipse.xtext.common.Terminals

generate serviceCutterConfigurationDSL "http://www.contextmapper.org/servicecutter/dsl/ServiceCutterConfigurationDSL"

ServiceCutterUserRepresentationsModel:
	(useCases += UseCase)* &
	(compatibilities = Compatibilities)? &  
	(aggregates += Aggregate)* & 
	(entities += Entity)* &
	(predefinedServices += PredefinedService)* &
	(securityAccessGroups += SecurityAccessGroup)* &
	(separatedSecurityZones += SeparatedSecurityZone)* &
	(sharedOwnerGroups += SharedOwnerGroup)*
;

UseCase:
	(doc=ML_COMMENT)?
	'UseCase' name=ID 
	(OPEN
		(('isLatencyCritical' '=' isLatencyCritical?='true')? &
		(('reads' nanoentitiesRead+=STRING*) ("," nanoentitiesRead+=STRING)*)? &
        (('writes' nanoentitiesWritten+=STRING*) ("," nanoentitiesWritten+=STRING)*)?)  
	CLOSE)
;

Compatibilities:
	{Compatibilities} 
	(doc=ML_COMMENT)?
	'Compatibilities' 
	(OPEN
		((availabilityCriticality += AvailabilityCriticality)*
		(consistencyCriticality += ConsistencyCriticality)*
		(contentVolatility += ContentVolatility)*
		(securityCriticality += SecurityCriticality)*
		(storageSimilarity += StorageSimilarity)*
		(structuralVolatility += StructuralVolatility)*)
	CLOSE)
;

Characteristic:
	AvailabilityCriticality | ConsistencyCriticality | ContentVolatility | SecurityCriticality | StorageSimilarity | StructuralVolatility
;

AvailabilityCriticality:
	(doc=ML_COMMENT)?
	'AvailabilityCriticality' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

ConsistencyCriticality:
	(doc=ML_COMMENT)?
	'ConsistencyCriticality' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

ContentVolatility:
	(doc=ML_COMMENT)?
	'ContentVolatility' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

SecurityCriticality:
	(doc=ML_COMMENT)?
	'SecurityCriticality' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

StorageSimilarity:
	(doc=ML_COMMENT)?
	'StorageSimilarity' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

StructuralVolatility:
	(doc=ML_COMMENT)?
	'StructuralVolatility' 
	OPEN
		(('characteristic' characteristic=ID) (characteristicDoc=SL_COMMENT)?
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?))
	CLOSE
;

RelatedGroup:
	Aggregate | Entity | PredefinedService | SecurityAccessGroup | SeparatedSecurityZone | SharedOwnerGroup
;

Aggregate:
	(doc=ML_COMMENT)?
	'Aggregate' name=STRING 
	OPEN
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?)
	CLOSE
;

Entity:
	(doc=ML_COMMENT)?
	'Entity' name=STRING 
	OPEN
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?)
	CLOSE
;

PredefinedService:
	(doc=ML_COMMENT)?
	'PredefinedService' name=STRING 
	OPEN
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?)
	CLOSE
;

SecurityAccessGroup:
	(doc=ML_COMMENT)?
	'SecurityAccessGroup' name=STRING 
	OPEN
		((nanoentities+=STRING) ("," nanoentities+=STRING)*)?
	CLOSE
;

SeparatedSecurityZone:
	(doc=ML_COMMENT)?
	'SeparatedSecurityZone' name=STRING 
	OPEN
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?)
	CLOSE
;

SharedOwnerGroup:
	(doc=ML_COMMENT)?
	'SharedOwnerGroup' name=STRING 
	OPEN
		(((nanoentities+=STRING) ("," nanoentities+=STRING)*)?)
	CLOSE
;

// define terminals
terminal OPEN: '{';
terminal CLOSE: '}';
