/*
 * generated by Xtext 2.15.0
 */
package org.contextmapper.tactic.dsl.formatting2

import com.google.inject.Inject
import org.contextmapper.tactic.dsl.services.TacticDDDLanguageGrammarAccess
import org.contextmapper.tactic.dsl.tacticdsl.Aggregate
import org.contextmapper.tactic.dsl.tacticdsl.Application
import org.contextmapper.tactic.dsl.tacticdsl.Entity
import org.contextmapper.tactic.dsl.tacticdsl.TacticDDDModel
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class TacticDDDLanguageFormatter extends AbstractFormatter2 {

	@Inject extension TacticDDDLanguageGrammarAccess

	def dispatch void format(TacticDDDModel tacticDDDModel, extension IFormattableDocument document) {
		for (_import : tacticDDDModel.imports) {
			_import.format
		}
		tacticDDDModel.app.format
	}

	def dispatch void format(Application application, extension IFormattableDocument document) {
		for (module : application.modules) {
			module.format
		}
		for (aggregate : application.aggregates) {
			aggregate.format
		}
	}

	def dispatch void format(Aggregate aggregate, extension IFormattableDocument document) {
		interior(
			aggregate.regionFor.keyword('{').append[newLine],
			aggregate.regionFor.keyword('}').prepend[newLine].append[newLine]
		)[indent]

		for (domainObject : aggregate.domainObjects) {
			domainObject.format
		}

		for (service : aggregate.services) {
			service.format
		}
	}

	def dispatch void format(Entity entity, extension IFormattableDocument document) {
		interior(
			entity.regionFor.keyword('{').append[newLine],
			entity.regionFor.keyword('}').prepend[newLine].append[newLine]
		)[indent]

		for (attribute : entity.attributes) {
			attribute.format
			attribute.append[newLine]
		}
		for (reference : entity.references) {
			reference.format
		}
	}

}
