name: Release Context Mapper

on:
  push:
    tags:
      - 'v*'

jobs:
  build_standalone:
    runs-on: ubuntu-16.04
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Graphviz
      run: sudo apt-get -y install graphviz
    - name: Gradle caches  
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean build
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  build_eclipse:
    runs-on: ubuntu-16.04
        
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Graphviz
      run: sudo apt-get -y install graphviz
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Grant execute permission for mvnw
      run: chmod +x mvnw
    - name: Build with Maven
      run: ./mvnw clean verify

  publish_standalone_lib:
    runs-on: ubuntu-16.04

    needs:
     - build_eclipse
     - build_standalone

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Graphviz
      run: sudo apt-get -y install graphviz
    - name: Gradle caches  
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Configure GPG Key
      run: |
        mkdir -p ~/.gnupg/
        printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
        gpg --import --batch ~/.gnupg/private.key
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Publish standalone library
      run: ./gradlew clean publish -Psigning.keyId=${GPG_KEY_ID} -Psigning.password=${GPG_KEY_PASSPHRASE} -Psigning.secretKeyRingFile=/home/runner/.gnupg/private.key
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

  publish_eclipse:
    runs-on: ubuntu-16.04

    needs:
     - build_eclipse
     - build_standalone

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Graphviz
      run: sudo apt-get -y install graphviz
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Grant execute permission for mvnw
      run: chmod +x mvnw
    - name: Publish Eclipse plugin with Maven
      run: ./mvnw --settings ./.github/workflows/settings.xml clean verify -Prelease-composite -DARTIFACTORY_REPO=context-mapper-eclipse
      env:
        ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}


